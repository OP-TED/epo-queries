# Analysis of receivedTenderLots

PREFIX epo: <http://data.europa.eu/a4g/ontology#>
PREFIX ccts: <http://www.unece.org/cefact#>
PREFIx xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT
    ?Procedure

    ?ProcedureTitleFr
    ?ProcedureTitleEn
    ?ProcedureTitleDe

    ?ProcedureIDValue
    ?Lot
    ?ReceivedTenderLots

    ?OrganisationIDValue
    ?OrganisationName
    ?CountryCode
    ?ProcedureTypeCode
    ?LotIDValue

    ?LotTitleEn
    ?LotTitleFr
    ?LotTitleDe

    ?ContractOverallAmountValue
    ?ContractOverallAmountCurrency
    ?PurposeMainClassificationCode
    ?PurposeContractNatureCode

    ?AccelerationJustification
    ?ProcedureisAccelerated

    ?ContractConclusionDate
    ?AwardDecisionDate

{

    # get procedure info
    ?Procedure a epo:Procedure .

    # this is where label fallback mechanism starts
    OPTIONAL {
        ?Procedure epo:hasTitle ?ProcedureTitleEn .
        FILTER (lang(?ProcedureTitleEn)="en")
    }
    OPTIONAL {
        ?Procedure epo:hasTitle ?ProcedureTitleFr .
        FILTER (lang(?ProcedureTitleFr)="fr")
    }
    OPTIONAL {
        ?Procedure epo:hasTitle ?ProcedureTitleDe .
        FILTER (lang(?ProcedureTitleDe)="de")
    }

    #    OPTIONAL {
    #        SELECT ?Procedure ?ProcedureTitleRand
    #        {
    #            ?Procedure epo:hasTitle ?ProcedureTitleRand .
    #        }
    #        LIMIT 1
    #    }
    # BIND (COALESCE(?ProcedureTitleEn, ?ProcedureTitleFr, ?ProcedureTitleDe, "") as ?ProcedureTitle)
    # BIND (COALESCE(?ProcedureTitleEn, "") as ?ProcedureTitle)

    # this is where label fallback mechanism ENDS

    OPTIONAL {
        ?Procedure epo:hasProcedureType ?ProcedureTypeCode .
    }
    OPTIONAL {
        ?Procedure epo:hasID ?ProcedureID .
        ?ProcedureID epo:hasIdentifierValue ?ProcedureIDValue . #
    }
    OPTIONAL {
        ?Procedure epo:hasOverallPurpose ?Purpose .
        ?Purpose epo:hasMainClassification ?PurposeMainClassificationCode .
        ?Purpose epo:hasContractNatureType ?PurposeContractNatureCode .
    }

    # Procedure acceleration
    OPTIONAL {
        ?Procedure epo:hasAcceleratedProcedureJustification ?AccelerationJustification .
    }
    OPTIONAL {
        ?Procedure epo:hasAccelerated ?ProcedureisAccelerated .
    }

    # get Organisation info
    ?Procedure epo:isResponsibilityOf ?Buyer . # epo:isResponsiblityOf / epo:isResponsibilityOf
    ?Buyer epo:isRoleOf ?Organisation .

    OPTIONAL {
        ?Organisation epo:hasName ?OrganisationName .
        FILTER (lang(?OrganisationName)="en")
    }

    OPTIONAL {
        ?Organisation epo:hasLocation ?Location .
        ?Location epo:hasPostalAddress ?Address .
        ?Address epo:hasCountryCode ?CountryCode .
    }
    OPTIONAL {
        ?Organisation epo:hasID ?OrganisationID .
        ?OrganisationID epo:hasIdentifierValue ?OrganisationIDValue .
    }

    # get Lot info
    ?Procedure epo:specifies ?Lot .
    OPTIONAL {
        ?Lot epo:hasID ?LotID .
        ?LotID epo:hasIdentifierValue ?LotIDValue .
    }

    # this is where label fallback mechanism starts
    OPTIONAL {
        ?Lot epo:hasTitle ?LotTitleEn .
        FILTER (lang(?LotTitle)="en")
    }
    OPTIONAL {
        ?Lot epo:hasTitle ?LotTitleFr .
        FILTER (lang(?LotTitle)="en")
    }
    OPTIONAL {
        ?Lot epo:hasTitle ?LotTitleDe .
        FILTER (lang(?LotTitle)="en")
    }
    # this is where label fallback mechanism ENDS

    # get StatisticalInformation
    OPTIONAL {
        ?Lot epo:providesAdditionalInformation ?StatisticalInformation .
        ?StatisticalInformation a epo:StatisticalInformation .
        ?StatisticalInformation epo:hasReceivedTenderLots ?ReceivedTenderLots .
    }

    # get AwardedValue
    # from Lot to the Contract
    OPTIONAL {
        ?Contract epo:refersTo ?Lot .
        ?Contract epo:hasProcurementValue ?ContractProcurementValue .
        ?ContractProcurementValue epo:hasOverallAmount ?ContractOverallAmount .
        ?ContractOverallAmount epo:hasCurrencyCode ?ContractOverallAmountCurrency .
        ?ContractOverallAmount ccts:hasAmountValue ?ContractOverallAmountValue .
    }

    # get ContractConclusionDate
    OPTIONAL # comment this our if you want to see recoreds that HAVE a date
    {
        ?Contract epo:refersTo ?Lot .
        ?Contract epo:hasContractConclusionDate ?ContractConclusionDate .
        # because the data represent these values as xsd:string, we need to first cast them into xsd date
        # also, filtering has to be local, not global
        #FILTER ( YEAR(STRDT(?ContractConclusionDate, xsd:date)) = 2017 )
    }

    # get AwardDecisionDate
    OPTIONAL {
        ?AwardDecision epo:refersTo ?Lot .
        ?AwardDecision epo:hasAwardDecisionDate ?AwardDecisionDate .
    }
}

